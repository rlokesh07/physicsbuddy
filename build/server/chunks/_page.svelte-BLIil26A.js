import { c as create_ssr_component } from './ssr-DFZIQmHs.js';
import { r as renderTextWithMathMode } from './KaTeX-xA5IKkOT.js';
import 'katex';

const css = {
  code: "div.svelte-9lp8cu{padding-bottom:10px;padding-left:70px}p.svelte-9lp8cu{font-size:20px}",
  map: null
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  $$result.css.add(css);
  return `<h1 data-svelte-h="svelte-15dt6vo">Mechanics Study Guide</h1> <div class="svelte-9lp8cu" data-svelte-h="svelte-khs9f4"><h3>Distance vs. Displacement</h3> <div class="svelte-9lp8cu"><p class="svelte-9lp8cu"><strong>Distance:</strong> How far something travels (scalar)</p> <p class="svelte-9lp8cu"><strong>Displacement:</strong> Final difference in position (vector)</p></div></div> <div class="svelte-9lp8cu"><h3 data-svelte-h="svelte-58kpw2">Average Velocity</h3> <div class="svelte-9lp8cu"><p class="svelte-9lp8cu" data-svelte-h="svelte-s5lup5">Average Velocity = total distance traveled / total time</p> <p class="svelte-9lp8cu"><!-- HTML_TAG_START -->${renderTextWithMathMode(`$$\\text{Average velocity} = \\frac{\\Delta x}{\\Delta t}$$`)}<!-- HTML_TAG_END --></p></div></div> <div class="svelte-9lp8cu"><h2 data-svelte-h="svelte-o4nu8m">Acceleration</h2> <div class="svelte-9lp8cu"><p class="svelte-9lp8cu" data-svelte-h="svelte-2v7kef">Rate of change of velocity</p> <p class="svelte-9lp8cu"><!-- HTML_TAG_START -->${renderTextWithMathMode(`$$a = \\frac{\\Delta v}{\\Delta t}$$`)}<!-- HTML_TAG_END --></p></div></div> <div class="svelte-9lp8cu"><h1 data-svelte-h="svelte-13tynm5">Kinematics Equations</h1> <div class="svelte-9lp8cu"><p class="svelte-9lp8cu"><!-- HTML_TAG_START -->${renderTextWithMathMode(`$$v = u + at$$`)}<!-- HTML_TAG_END --></p> <p class="svelte-9lp8cu" data-svelte-h="svelte-1dghzfx"><em>Final velocity = Initial velocity + acceleration × time</em></p> <br> <p class="svelte-9lp8cu"><!-- HTML_TAG_START -->${renderTextWithMathMode(`$$s = ut + \\frac{1}{2}at^2$$`)}<!-- HTML_TAG_END --></p> <p class="svelte-9lp8cu" data-svelte-h="svelte-efyox9"><em>Final position = Initial velocity × time + ½ × acceleration × time²</em></p> <br> <p class="svelte-9lp8cu"><!-- HTML_TAG_START -->${renderTextWithMathMode(`$$v^2 = u^2 + 2as$$`)}<!-- HTML_TAG_END --></p> <p class="svelte-9lp8cu" data-svelte-h="svelte-12b5eg0"><em>Final Velocity² = Initial Velocity² + 2 × Acceleration × Final Position</em></p> <br> <p class="svelte-9lp8cu"><!-- HTML_TAG_START -->${renderTextWithMathMode(`$$s = \\frac{v + u}{2} \\cdot t$$`)}<!-- HTML_TAG_END --></p> <p class="svelte-9lp8cu" data-svelte-h="svelte-ss6gm7"><em>Final position = average of initial and final velocity × time (only if acceleration is constant)</em></p></div></div> <div class="svelte-9lp8cu"><h1 data-svelte-h="svelte-4lwyc7">Free fall</h1> <p class="svelte-9lp8cu" data-svelte-h="svelte-178fcwz"><strong>Free Fall:</strong> When a object is falling only due to the force of gravity</p> <div class="svelte-9lp8cu"><p class="svelte-9lp8cu"><!-- HTML_TAG_START -->${renderTextWithMathMode(`$$g=9.8ms^{-2}$$`)}<!-- HTML_TAG_END --></p></div></div> <div class="svelte-9lp8cu"><h1 data-svelte-h="svelte-1updcwt">Newton&#39;s 3 Laws</h1> <div class="svelte-9lp8cu" data-svelte-h="svelte-1ef6x39"><h2>Newton&#39;s First Law (Law of Inertia)</h2> <p class="svelte-9lp8cu">An object at rest stays at rest, and an object in motion stays in motion with the same velocity,
			unless acted upon by a net external force.</p> <p class="svelte-9lp8cu"><em>This means: Objects resist changes to their state of motion.</em></p></div> <div class="svelte-9lp8cu"><h2 data-svelte-h="svelte-133waxj">Newton&#39;s Second Law</h2> <p class="svelte-9lp8cu" data-svelte-h="svelte-1cutsh2">The net force acting on an object is equal to the rate of change of its momentum. For constant mass:</p> <p class="svelte-9lp8cu"><!-- HTML_TAG_START -->${renderTextWithMathMode(`$$F = ma$$`)}<!-- HTML_TAG_END --></p> <p class="svelte-9lp8cu" data-svelte-h="svelte-gqkitw">Where: <br> <code>F</code> = Net force (N) <br> <code>m</code> = Mass (kg) <br> <code>a</code> = Acceleration (m/s²)</p></div> <div class="svelte-9lp8cu" data-svelte-h="svelte-a0w3ep"><h2>Newton&#39;s Third Law</h2> <p class="svelte-9lp8cu">For every action, there is an equal and opposite reaction.</p> <p class="svelte-9lp8cu"><em>This means: Forces always come in pairs. If object A exerts a force on object B, then B exerts an equal and opposite force on A.</em></p></div></div> <div class="svelte-9lp8cu"><h2 data-svelte-h="svelte-djoeyr">Spring Force (Hooke&#39;s Law)</h2> <p class="svelte-9lp8cu" data-svelte-h="svelte-pvsgdh">The force exerted by a spring is directly proportional to its extension or compression from its equilibrium (rest) position:</p> <p class="svelte-9lp8cu"><!-- HTML_TAG_START -->${renderTextWithMathMode(`$$F = -kx$$`)}<!-- HTML_TAG_END --></p> <p class="svelte-9lp8cu" data-svelte-h="svelte-mlhdwv">Where: <br> <code>F</code> = Restoring force (N) <br> <code>k</code> = Spring constant (N/m) <br> <code>x</code> = Displacement from equilibrium (m) <br></p> <p class="svelte-9lp8cu" data-svelte-h="svelte-141tkxj">The negative sign indicates that the force exerted by the spring is in the opposite direction of displacement.</p></div> <div class="svelte-9lp8cu"><h1 data-svelte-h="svelte-1opzc10">Force of Friction</h1> <div class="svelte-9lp8cu"><h2 data-svelte-h="svelte-d537md">1. Static Friction</h2> <p class="svelte-9lp8cu"><!-- HTML_TAG_START -->${renderTextWithMathMode(`$$f_{\\text{static}} \\leq \\mu_s N$$`)}<!-- HTML_TAG_END --></p> <p class="svelte-9lp8cu" data-svelte-h="svelte-1fgddpe">Static friction resists the start of motion. It increases with applied force up to a maximum limit.</p> <ul><p class="svelte-9lp8cu"><!-- HTML_TAG_START -->${renderTextWithMathMode(`<strong>$$f_{\\text{static}}$$</strong> = Static friction force (N)`)}<!-- HTML_TAG_END --></p> <p class="svelte-9lp8cu"><!-- HTML_TAG_START -->${renderTextWithMathMode(`<strong>$$\\mu_s$$</strong> = Coefficient of static friction (unitless)`)}<!-- HTML_TAG_END --></p> <p class="svelte-9lp8cu"><!-- HTML_TAG_START -->${renderTextWithMathMode(`<strong>$$N$$</strong> = Normal force (N)`)}<!-- HTML_TAG_END --></p></ul></div> <div class="svelte-9lp8cu"><h2 data-svelte-h="svelte-19y4jpv">2. Kinetic (Dynamic) Friction</h2> <p class="svelte-9lp8cu"><!-- HTML_TAG_START -->${renderTextWithMathMode(`$$f_{\\text{kinetic}} = \\mu_k N$$`)}<!-- HTML_TAG_END --></p> <p class="svelte-9lp8cu" data-svelte-h="svelte-1lg4yik">Kinetic friction acts on objects in motion and stays constant.</p> <ul><p class="svelte-9lp8cu"><!-- HTML_TAG_START -->${renderTextWithMathMode(`<strong>$$f_{\\text{kinetic}}$$</strong> = Kinetic friction force (N)`)}<!-- HTML_TAG_END --></p> <p class="svelte-9lp8cu"><!-- HTML_TAG_START -->${renderTextWithMathMode(`<strong>$$\\mu_k$$</strong> = Coefficient of kinetic friction (unitless)`)}<!-- HTML_TAG_END --></p> <p class="svelte-9lp8cu"><!-- HTML_TAG_START -->${renderTextWithMathMode(`<strong>$$N$$</strong> = Normal force (N)`)}<!-- HTML_TAG_END --></p></ul></div> <div class="svelte-9lp8cu"><h1 data-svelte-h="svelte-1xsxpvt">Fluids</h1> <div class="svelte-9lp8cu"><h2 data-svelte-h="svelte-hy39d">Drag Force Equation</h2> <br> <p class="svelte-9lp8cu"><!-- HTML_TAG_START -->${renderTextWithMathMode(`$$F_d = \\frac{1}{2} C_d \\rho A v^2$$`)}<!-- HTML_TAG_END --></p> <p class="svelte-9lp8cu" data-svelte-h="svelte-13ulofd">Drag force opposes the motion of an object moving through a fluid (like air or water).</p> <p class="svelte-9lp8cu"><!-- HTML_TAG_START -->${renderTextWithMathMode(`<strong>$$F_d$$</strong> = Drag force (N)`)}<!-- HTML_TAG_END --></p> <p class="svelte-9lp8cu"><!-- HTML_TAG_START -->${renderTextWithMathMode(`<strong>$$C_d$$</strong> = Drag coefficient (unitless, depends on shape)`)}<!-- HTML_TAG_END --></p> <p class="svelte-9lp8cu"><!-- HTML_TAG_START -->${renderTextWithMathMode(`<strong>$$\\rho$$</strong> = Fluid density (kg/m³)`)}<!-- HTML_TAG_END --></p> <p class="svelte-9lp8cu"><!-- HTML_TAG_START -->${renderTextWithMathMode(`<strong>$$A$$</strong> = Cross-sectional area (m²)`)}<!-- HTML_TAG_END --></p> <p class="svelte-9lp8cu"><!-- HTML_TAG_START -->${renderTextWithMathMode(`<strong>$$v$$</strong> = Velocity of the object relative to fluid (m/s)`)}<!-- HTML_TAG_END --></p></div> <div class="svelte-9lp8cu"><h2 data-svelte-h="svelte-347ac7">Buoyant Force Equation</h2> <br> <p class="svelte-9lp8cu"><!-- HTML_TAG_START -->${renderTextWithMathMode(`$$F_b = \\rho V g$$`)}<!-- HTML_TAG_END --></p> <p class="svelte-9lp8cu" data-svelte-h="svelte-btq79">Buoyant force is the upward force exerted by a fluid on an object placed in it. It&#39;s equal to the weight of the fluid displaced by the object.</p> <p class="svelte-9lp8cu"><!-- HTML_TAG_START -->${renderTextWithMathMode(`<strong>$$F_b$$</strong> = Buoyant force (N)`)}<!-- HTML_TAG_END --></p> <p class="svelte-9lp8cu"><!-- HTML_TAG_START -->${renderTextWithMathMode(`<strong>$$\\rho$$</strong> = Density of fluid (kg/m³)`)}<!-- HTML_TAG_END --></p> <p class="svelte-9lp8cu"><!-- HTML_TAG_START -->${renderTextWithMathMode(`<strong>$$V$$</strong> = Volume of displaced fluid (m³)`)}<!-- HTML_TAG_END --></p> <p class="svelte-9lp8cu"><!-- HTML_TAG_START -->${renderTextWithMathMode(`<strong>$$g$$</strong> = Gravitational acceleration (9.81 m/s²)`)}<!-- HTML_TAG_END --></p></div></div></div> <div class="svelte-9lp8cu"><h1 data-svelte-h="svelte-fqvo5e">Work and Energy</h1> <div class="svelte-9lp8cu"><h2 data-svelte-h="svelte-1qlg2sz">Work</h2> <p class="svelte-9lp8cu"><!-- HTML_TAG_START -->${renderTextWithMathMode(`$$\\text{Work} = \\text{Force} \\cdot \\text{Distance} \\cdot \\cos(\\theta)$$`)}<!-- HTML_TAG_END --></p> <p class="svelte-9lp8cu" data-svelte-h="svelte-1ito5os">W = Work (Joules, J)</p> <p class="svelte-9lp8cu" data-svelte-h="svelte-f0z8lh">F = Force (Newtons, N)</p> <p class="svelte-9lp8cu" data-svelte-h="svelte-1d6tu1i">d = Displacement (meters, m)</p> <p class="svelte-9lp8cu" data-svelte-h="svelte-16dfp2b">θ = Angle between force and displacement</p></div> <div class="svelte-9lp8cu"><h2 data-svelte-h="svelte-xb0v7v">Kinetic Energy</h2> <p class="svelte-9lp8cu"><!-- HTML_TAG_START -->${renderTextWithMathMode(`$$E_k = \\frac{1}{2} m v^2$$`)}<!-- HTML_TAG_END --></p> <p class="svelte-9lp8cu" data-svelte-h="svelte-163hex5">Ek = Kinetic Energy (J)</p> <p class="svelte-9lp8cu" data-svelte-h="svelte-11s9qdd">m = Mass (kg)</p> <p class="svelte-9lp8cu" data-svelte-h="svelte-18e02z4">v = Velocity (m/s)</p></div> <div class="svelte-9lp8cu"><h2 data-svelte-h="svelte-kqy1w7">Gravitational Potential Energy</h2> <p class="svelte-9lp8cu"><!-- HTML_TAG_START -->${renderTextWithMathMode(`$$E_p = m g h$$`)}<!-- HTML_TAG_END --></p> <p class="svelte-9lp8cu" data-svelte-h="svelte-1dzhjhq">Ep = Gravitational Potential Energy (J)</p> <p class="svelte-9lp8cu" data-svelte-h="svelte-11s9qdd">m = Mass (kg)</p> <p class="svelte-9lp8cu" data-svelte-h="svelte-1qcbrdv">g = Acceleration due to gravity (9.81 m/s²)</p> <p class="svelte-9lp8cu" data-svelte-h="svelte-12n6q3m">h = Height above reference point (m)</p></div> <div class="svelte-9lp8cu"><h2 data-svelte-h="svelte-1qhcec9">Elastic Potential Energy</h2> <p class="svelte-9lp8cu"><!-- HTML_TAG_START -->${renderTextWithMathMode(`$$E_e = \\frac{1}{2} k x^2$$`)}<!-- HTML_TAG_END --></p> <p class="svelte-9lp8cu" data-svelte-h="svelte-5qryrl">Eₑ = Elastic Potential Energy (J)</p> <p class="svelte-9lp8cu" data-svelte-h="svelte-ja8ujk">k = Spring constant (N/m)</p> <p class="svelte-9lp8cu" data-svelte-h="svelte-17s4l8">x = Displacement from equilibrium (m)</p></div> <div class="svelte-9lp8cu"><h2 data-svelte-h="svelte-y31zf1">Power</h2> <p class="svelte-9lp8cu"><!-- HTML_TAG_START -->${renderTextWithMathMode(`$$P = \\frac{W}{t}$$`)}<!-- HTML_TAG_END --></p> <p class="svelte-9lp8cu" data-svelte-h="svelte-skfqnx">P = Power (Watts, W)</p> <p class="svelte-9lp8cu" data-svelte-h="svelte-barbgg">W = Work done (J)</p> <p class="svelte-9lp8cu" data-svelte-h="svelte-7fsp1t">t = Time taken (s)</p></div> <div class="svelte-9lp8cu"><h2 data-svelte-h="svelte-1cq40oz">Efficiency</h2> <p class="svelte-9lp8cu"><!-- HTML_TAG_START -->${renderTextWithMathMode(`$$\\text{Efficiency} = \\frac{\\text{Useful Output Energy}}{\\text{Total Input Energy}} \\cdot 100\\%$$`)}<!-- HTML_TAG_END --></p> <p class="svelte-9lp8cu" data-svelte-h="svelte-1wh3xow">Efficiency = Percentage of input energy converted into useful output</p></div></div> <div class="svelte-9lp8cu"><h1 data-svelte-h="svelte-153bc6a">Momentum</h1> <div class="svelte-9lp8cu"><p class="svelte-9lp8cu"><!-- HTML_TAG_START -->${renderTextWithMathMode(`$$\\rho = mv$$`)}<!-- HTML_TAG_END --></p> <p class="svelte-9lp8cu"><!-- HTML_TAG_START -->${renderTextWithMathMode(`$$\\rho$$ = momentum`)}<!-- HTML_TAG_END --></p> <p class="svelte-9lp8cu" data-svelte-h="svelte-gcotz8">m = Mass</p> <p class="svelte-9lp8cu" data-svelte-h="svelte-1qy06bk">v = Velocity</p> <br> <h2 data-svelte-h="svelte-shfr47">Collisions</h2> <div class="svelte-9lp8cu" data-svelte-h="svelte-uyagdb"><h3>Elastic Collisions</h3> <p class="svelte-9lp8cu">Objects bounce off each other</p> <p class="svelte-9lp8cu">Kinetic Energy is conserved</p> <p class="svelte-9lp8cu">Momentum is conserved</p></div> <div class="svelte-9lp8cu" data-svelte-h="svelte-16su6qt"><h3>Inelastic Collisions</h3> <p class="svelte-9lp8cu">Objects stick together</p> <p class="svelte-9lp8cu">Kinetic Energy is NOT conserved</p> <p class="svelte-9lp8cu">Momentum is conserved</p></div> <p class="svelte-9lp8cu" data-svelte-h="svelte-yxauuy">Momentum before collision = momentum collision no matter what</p> <p class="svelte-9lp8cu" data-svelte-h="svelte-wrt4v1">In 2 dimensions, the momentum is conserved in both axis individually</p></div></div> <div class="svelte-9lp8cu" data-svelte-h="svelte-1jltphy"><h1>Projectile Motion</h1> <p class="svelte-9lp8cu">Break down motion between x and y axis</p> <p class="svelte-9lp8cu"><strong>x-axis:</strong> constant velocity from launch</p> <p class="svelte-9lp8cu"><strong>y-axis:</strong> downward acceleration from gravity</p> </div>`;
});

export { Page as default };
//# sourceMappingURL=_page.svelte-BLIil26A.js.map
